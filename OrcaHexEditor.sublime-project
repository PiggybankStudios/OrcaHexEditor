{
	"folders":
	[
		{
			"path": ".",
			"folder_exclude_patterns": [
				"lib/include/*",
				"build/OrcaHexEditor",
				"Release/*",
				"engine/template",
				"playdate_template",
				"platform/linux",
				"platform/osx",
				"platform/playdate",
				"platform/web",
				"platform/win32",
			],
			"file_exclude_patterns": [
				"*.wasm",
				"*.zip",
			],
		},
		{
			"path": "lib/include/gylib",
			"file_exclude_patterns": [
				"*.sublime-project",
				"gy_scratch_arenas.cpp",
			],
			"folder_exclude_patterns":
			[
				"test"
			],
			"name": "GyLib",
		},
		{
			"name": "Orca Docs",
			"path": "lib/include/orca/doc/",
			"folder_exclude_patterns": [
				"mkdocs/docs",
			],
			/*"file_exclude_patterns": [
				"*.sublime-project",
			],*/
		},
		{
			"name": "Orca Headers",
			"path": "lib/include/orca/src/",
			/*"file_exclude_patterns": [
				"README.md",
				"CMakeLists.txt",
				"Config.cmake.in",
				"premake4.lua",
				"LICENSE.txt",
			],*/
			"file_include_patterns":
			[
				"*.h"
			],
		},
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"Box_Zero",
			"Box_Zero_Const",
			"Boxi_Zero",
			"Boxi_Zero_Const",
			"MyStr_Empty",
			"MyStr_Empty_Const",
			"OPEN_FILE_DIALOG_DEF_FONT_SIZE",
			"OPEN_FILE_DIALOG_SCROLL_LAG",
			"OPEN_FILE_DIALOG_SCROLL_SPEED",
			"OPEN_FILE_DIALOG_SIZE",
			"Obb2_Zero",
			"Obb2_Zero_Const",
			"Obb3_Zero",
			"Obb3_Zero_Const",
			"OpenFileDialogResult_Cancel",
			"OpenFileDialogResult_Escape",
			"OpenFileDialogResult_None",
			"OpenFileDialogResult_NumValues",
			"OpenFileDialogResult_Ok",
			"Rec_Default",
			"Rec_Default_Const",
			"Rec_Zero",
			"Rec_Zero_Const",
			"Reci_Default",
			"Reci_Default_Const",
			"Reci_Zero",
			"Reci_Zero_Const",
			"Vec2_Down",
			"Vec2_Half",
			"Vec2_Left",
			"Vec2_One",
			"Vec2_Right",
			"Vec2_Up",
			"Vec2_Zero",
			"Vec2_Zero_Const",
			"Vec2i_Down",
			"Vec2i_Left",
			"Vec2i_One",
			"Vec2i_Right",
			"Vec2i_Up",
			"Vec2i_Zero",
			"Vec2i_Zero_Const",
			"Vec3_Back",
			"Vec3_Backward",
			"Vec3_Bottom",
			"Vec3_Down",
			"Vec3_Forward",
			"Vec3_Front",
			"Vec3_Half",
			"Vec3_Left",
			"Vec3_One",
			"Vec3_Right",
			"Vec3_Top",
			"Vec3_Up",
			"Vec3_Zero",
			"Vec3_Zero_Const",
			"Vec3i_Back",
			"Vec3i_Backward",
			"Vec3i_Bottom",
			"Vec3i_Down",
			"Vec3i_Forward",
			"Vec3i_Front",
			"Vec3i_Left",
			"Vec3i_One",
			"Vec3i_Right",
			"Vec3i_Top",
			"Vec3i_Up",
			"Vec3i_Zero",
			"Vec3i_Zero_Const",
			"Vec4_Back",
			"Vec4_Backward",
			"Vec4_Bottom",
			"Vec4_Down",
			"Vec4_Forward",
			"Vec4_Front",
			"Vec4_Half",
			"Vec4_Left",
			"Vec4_Nextward",
			"Vec4_One",
			"Vec4_Prevward",
			"Vec4_Right",
			"Vec4_Top",
			"Vec4_Up",
			"Vec4_Zero",
			"Vec4_Zero_Const",
			"Vec4i_Back",
			"Vec4i_Backward",
			"Vec4i_Bottom",
			"Vec4i_Down",
			"Vec4i_Forward",
			"Vec4i_Front",
			"Vec4i_Left",
			"Vec4i_Nextward",
			"Vec4i_One",
			"Vec4i_Prevward",
			"Vec4i_Right",
			"Vec4i_Top",
			"Vec4i_Up",
			"Vec4i_Zero",
			"Vec4i_Zero_Const",
			"WordBreakCharClass_AlphabeticLower",
			"WordBreakCharClass_AlphabeticUpper",
			"WordBreakCharClass_NumClasses",
			"WordBreakCharClass_Numeric",
			"WordBreakCharClass_Other",
			"WordBreakCharClass_Punctuation",
			"WordBreakCharClass_PunctuationClose",
			"WordBreakCharClass_PunctuationOpen",
			"WordBreakCharClass_Whitespace",
			"WordBreakCharClass_WordPunctuation",
		],
		"custom_functions":
		[
			"#define AllocString(arena, strPntr)",
			"#define AssertNullTerm(strPntr)",
			"#define AssertNullTerm_(strPntr)",
			"#define FreeString(arena, strPntr)",
			"#define FreeWideString(arena, wideStrPntr)",
			"#define NewStringInArena(arena, length, charPntr)",
			"#define NewStringInArenaNt(arena, nullTermStr)",
			"#define NotEmptyStr(strPntr)",
			"#define NotEmptyStr_(strPntr)",
			"#define NotNullStr(strPntr)",
			"#define NotNullStr_(strPntr)",
			"#define OC_Abort(message, ...)",
			"#define OC_AbortExt(file, function, line, fmt, ...)",
			"#define OC_ArenaPushArray(arena, type, count)",
			"#define OC_ArenaPushType(arena, type)",
			"#define OC_Assert(test, message, ...)",
			"#define OC_AssertFail(file, function, line, test, fmt, ...)",
			"#define OC_ListEntry(element, type, member)",
			"#define OC_ListFirstEntry(list, type, member)",
			"#define OC_ListFor(list, element, type, member)",
			"#define OC_ListForReverse(list, element, type, member)",
			"#define OC_ListForSafe(list, element, type, member)",
			"#define OC_ListLastEntry(list, type, member)",
			"#define OC_ListNext(element)",
			"#define OC_ListNextEntry(list, element, type, member)",
			"#define OC_ListPopBackEntry(list, type, member)",
			"#define OC_ListPopFrontEntry(list, type, member)",
			"#define OC_ListPrev(element)",
			"#define OC_ListPrevEntry(list, element, type, member)",
			"#define OC_Log_E(message, ...)",
			"#define OC_Log_I(message, ...)",
			"#define OC_Log_W(message, ...)",
			"#define OC_MyStrPushf(arena, format, ...)",
			"#define OC_ScratchEnd(scope)",
			"#define OC_Str8ListPushf(arena, list, format, ...)",
			"#define OC_Str8Pushf(arena, format, ...)",
			"#define OC_UiFrame(size, style, mask)",
			"#define OC_UiFrame_(size, style, mask)",
			"#define OC_UiMenu(label)",
			"#define OC_UiMenuBar(name)",
			"#define OC_UiMenuBar_(name)",
			"#define OC_UiMenu_(label)",
			"#define OC_UiPanel(s, f)",
			"#define StrPntrPrint(myStrPntr)",
			"#define StrPrint(myStrStruct)",
			"#define VarArrayAdd(array, type)",
			"#define VarArrayAddRange(array, index, newItemsCount, type)",
			"#define VarArrayContains(array, itemPntr)",
			"#define VarArrayContainsTyped(array, itemPntr, type)",
			"#define VarArrayGet(array, index, type)",
			"#define VarArrayGetFirst(array, type)",
			"#define VarArrayGetFirstHard(array, type)",
			"#define VarArrayGetFirstSoft(array, type)",
			"#define VarArrayGetHard(array, index, type)",
			"#define VarArrayGetIndexOf(array, itemPntr, indexOutPntr, type)",
			"#define VarArrayGetLast(array, type)",
			"#define VarArrayGetLastHard(array, type)",
			"#define VarArrayGetLastSoft(array, type)",
			"#define VarArrayGetSoft(array, index, type)",
			"#define VarArrayInsert(array, index, type)",
			"#define VarArrayLoop(arrayPntr, indexName)",
			"#define VarArrayLoopGet(type, varName, arrayPntr, index)",
			"#define VarArrayMerge(destArray, sourceArray)",
			"#define VarArrayPop(array, type)",
			"#define VarArrayPopFront(array, type)",
			"#define VarArrayPush(array, type)",
			"#define VarArrayPushFront(array, type)",
			"#define VarArrayRemove(array, index, type)",
			"#define VarArrayRemoveByPntr(array, itemToRemove)",
			"#define VarArrayRemoveByPntrTyped(array, itemToRemove, type)",
			"#define VarArrayRemoveRange(array, index, numItemsToRemove, type)",
			"// ORCA_INLINE mat4 OC_MatrixTop()",
			"// ORCA_INLINE void OC_MatrixMultiplyPush(mat4 matrix)",
			"// ORCA_INLINE void OC_MatrixPush(mat4 matrix)",
			"MyStrPair_t NewStrPair(MyStr_t keyStr, MyStr_t valueStr)",
			"MyStr_t CombineStrs(MemArena_t* memArena, MyStr_t str1, MyStr_t str2)",
			"MyStr_t ConvertUcs2StrToUtf8(MemArena_t* memArena, const wchar_t* wideStrPntr, uxx wideStrLength)",
			"MyStr_t ConvertUcs2StrToUtf8Nt(MemArena_t* memArena, const wchar_t* nullTermWideStr)",
			"MyStr_t FindStrParensPart(MyStr_t target, char openParensChar = '[', char closeParensChar = ']')",
			"MyStr_t FormatBytes(uxx numBytes, MemArena_t* memArena)",
			"MyStr_t FormatMilliseconds(uxx milliseconds, MemArena_t* memArena)",
			"MyStr_t FormatNumberWithCommas(uxx number, MemArena_t* memArena = nullptr)",
			"MyStr_t FormatRealTime(const RealTime_t* realTime, MemArena_t* memArena, bool includeDayOfWeek = true, bool includeHourMinuteSecond = true, bool includeMonthDayYear = true)",
			"MyStr_t GetOpenFileDialogSelectedPath(const OpenFileDialog_t* dialog, MemArena_t* memArena, u64 selectionIndex = 0)",
			"MyStr_t NewStr(uxx length, char* pntr)",
			"MyStr_t NewStrLengthOnly(uxx length)",
			"MyStr_t PrintInArenaStr(MemArena_t* arena, const char* formatString, ...)",
			"MyStr_t StrReplace(MyStr_t str, MyStr_t target, MyStr_t replacement, MemArena_t* memArena)",
			"MyStr_t StrReplaceMultiple(MyStr_t str, uxx numReplacements, const MyStrPair_t* replacements, MemArena_t* memArena)",
			"MyStr_t StrSplice(MyStr_t target, uxx startIndex, uxx endIndex, MyStr_t replacement, MemArena_t* memArena)",
			"MyStr_t StrSubstring(MyStr_t* target, uxx startIndex, uxx endIndex)",
			"MyStr_t StrSubstringLength(MyStr_t* target, uxx startIndex, uxx length)",
			"MyStr_t StringRepeat(MemArena_t* memArena, MyStr_t str, uxx numRepetitions)",
			"MyStr_t UnescapeQuotedStringInArena(MemArena_t* memArena, MyStr_t target, bool removeQuotes = true, bool allowNewLineEscapes = true, bool allowOtherEscapeCodes = false)",
			"MyStr_t* SplitString(MemArena_t* memArena, MyStr_t target, MyStr_t delineator, uxx* numPiecesOut = nullptr, bool ignoreCase = false)",
			"MyWideStr_t ConvertUtf8StrToUcs2(MemArena_t* memArena, MyStr_t utf8Str)",
			"OC_OnFrameRefresh()",
			"OC_OnInit()",
			"OC_OnKeyDown(OC_ScanCode_t scan, OC_KeyCode_t key)",
			"OC_OnKeyUp(OC_ScanCode_t scan, OC_KeyCode_t key)",
			"OC_OnMouseDown(OC_MouseButton_t button)",
			"OC_OnMouseEnter()",
			"OC_OnMouseLeave()",
			"OC_OnMouseMove(f32 x, f32 y, f32 deltaX, f32 deltaY)",
			"OC_OnMouseUp(OC_MouseButton_t button)",
			"OC_OnMouseWheel(f32 deltaX, f32 deltaY)",
			"OC_OnRawEvent(OC_Event_t* event)",
			"OC_OnResize(f32 width, f32 height)",
			"OC_OnTerminate()",
			"OC_Rect_t ToOcRect(rec rectangle)",
			"OC_Str8_t ToOcStr8(MyStr_t str)",
			"OC_Vec2_t ToOcVec2(v2 vector)",
			"OC_Vec2i_t ToOcVec2i(v2i vector)",
			"OC_Vec3_t ToOcVec3(v3 vector)",
			"OC_Vec4_t ToOcVec4(v4 vector)",
			"ORCA_INLINE Color_t OC_ColorConvert(Color_t color, OC_ColorSpace_t colorSpace)",
			"ORCA_INLINE Color_t OC_GetColor()",
			"ORCA_INLINE MyStr_t OC_PathAppend(OC_Arena_t* arena, MyStr_t parent, MyStr_t relPath)",
			"ORCA_INLINE MyStr_t OC_PathJoin(OC_Arena_t* arena, OC_Str8List_t elements)",
			"ORCA_INLINE MyStr_t OC_PathSliceDirectory(MyStr_t path)",
			"ORCA_INLINE MyStr_t OC_PathSliceFilename(MyStr_t path)",
			"ORCA_INLINE MyStr_t OC_Str8FromBuffer(u64 len, char* buffer)",
			"ORCA_INLINE MyStr_t OC_Str8ListCollate(OC_Arena_t* arena, OC_Str8List_t list, MyStr_t prefix, MyStr_t separator, MyStr_t postfix)",
			"ORCA_INLINE MyStr_t OC_Str8ListJoin(OC_Arena_t* arena, OC_Str8List_t list)",
			"ORCA_INLINE MyStr_t OC_Str8PushBuffer(OC_Arena_t* arena, u64 len, char* buffer)",
			"ORCA_INLINE MyStr_t OC_Str8PushCopy(OC_Arena_t* arena, MyStr_t s)",
			"ORCA_INLINE MyStr_t OC_Str8PushCstring(OC_Arena_t* arena, const char* str)",
			"ORCA_INLINE MyStr_t OC_Str8PushSlice(OC_Arena_t* arena, MyStr_t s, u64 start, u64 end)",
			"ORCA_INLINE MyStr_t OC_Str8Pushfv(OC_Arena_t* arena, const char* format, va_list args)",
			"ORCA_INLINE MyStr_t OC_Str8Slice(MyStr_t s, u64 start, u64 end)",
			"ORCA_INLINE OC_ArenaScope_t OC_ArenaScopeBegin(OC_Arena_t* arena)",
			"ORCA_INLINE OC_ArenaScope_t OC_ScratchBegin()",
			"ORCA_INLINE OC_ArenaScope_t OC_ScratchBeginNext(OC_Arena_t* used)",
			"ORCA_INLINE OC_CanvasContext_t OC_CanvasContextCreate()",
			"ORCA_INLINE OC_CanvasContext_t OC_CanvasContextNil()",
			"ORCA_INLINE OC_CanvasContext_t OC_CanvasContextSelect(OC_CanvasContext_t context)",
			"ORCA_INLINE OC_CanvasRenderer_t OC_CanvasRendererCreate()",
			"ORCA_INLINE OC_CanvasRenderer_t OC_CanvasRendererNil()",
			"ORCA_INLINE OC_CapType_t OC_GetCap()",
			"ORCA_INLINE OC_Color_t OC_ColorRgba(f32 r, f32 g, f32 b, f32 a)",
			"ORCA_INLINE OC_Color_t OC_ColorSrgba(f32 r, f32 g, f32 b, f32 a)",
			"ORCA_INLINE OC_Color_t OC_GetColor_()",
			"ORCA_INLINE OC_FileOpenWithDialogResult_t OC_FileOpenWithDialog(OC_Arena_t* arena, OC_FileAccess_t rights, OC_FileOpenFlags_t flags, OC_FileDialogDesc_t* desc)",
			"ORCA_INLINE OC_FileStatus_t OC_FileGetStatus(OC_File_t file)",
			"ORCA_INLINE OC_File_t OC_FileNil()",
			"ORCA_INLINE OC_File_t OC_FileOpen(MyStr_t path, OC_FileAccess_t rights, OC_FileOpenFlags_t flags)",
			"ORCA_INLINE OC_File_t OC_FileOpenAt(OC_File_t dir, MyStr_t path, OC_FileAccess_t rights, OC_FileOpenFlags_t flags)",
			"ORCA_INLINE OC_File_t OC_FileOpenWithRequest(MyStr_t path, OC_FileAccess_t rights, OC_FileOpenFlags_t flags)",
			"ORCA_INLINE OC_FontMetrics_t OC_FontGetMetrics(OC_Font_t font, f32 emSize)",
			"ORCA_INLINE OC_FontMetrics_t OC_FontGetMetricsUnscaled(OC_Font_t font)",
			"ORCA_INLINE OC_Font_t OC_FontCreateFromFile(OC_File_t file, u32 rangeCount, OC_UnicodeRange_t* ranges)",
			"ORCA_INLINE OC_Font_t OC_FontCreateFromMemory(MyStr_t mem, u32 rangeCount, OC_UnicodeRange_t* ranges)",
			"ORCA_INLINE OC_Font_t OC_FontCreateFromPath(MyStr_t path, u32 rangeCount, OC_UnicodeRange_t* ranges)",
			"ORCA_INLINE OC_Font_t OC_FontNil()",
			"ORCA_INLINE OC_Font_t OC_GetFont()",
			"ORCA_INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromFile(OC_RectAtlas_t* atlas, OC_Image_t backingImage, OC_File_t file, bool flip)",
			"ORCA_INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromMemory(OC_RectAtlas_t* atlas, OC_Image_t backingImage, MyStr_t mem, bool flip)",
			"ORCA_INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromPath(OC_RectAtlas_t* atlas, OC_Image_t backingImage, MyStr_t path, bool flip)",
			"ORCA_INLINE OC_ImageRegion_t OC_ImageAtlasAllocFromRgba_8(OC_RectAtlas_t* atlas, OC_Image_t backingImage, u32 width, u32 height, u8* pixels)",
			"ORCA_INLINE OC_Image_t OC_GetImage()",
			"ORCA_INLINE OC_Image_t OC_ImageCreate(OC_CanvasRenderer_t renderer, u32 width, u32 height)",
			"ORCA_INLINE OC_Image_t OC_ImageCreateFromFile(OC_CanvasRenderer_t renderer, OC_File_t file, bool flip)",
			"ORCA_INLINE OC_Image_t OC_ImageCreateFromMemory(OC_CanvasRenderer_t renderer, MyStr_t mem, bool flip)",
			"ORCA_INLINE OC_Image_t OC_ImageCreateFromPath(OC_CanvasRenderer_t renderer, MyStr_t path, bool flip)",
			"ORCA_INLINE OC_Image_t OC_ImageCreateFromRgba_8(OC_CanvasRenderer_t renderer, u32 width, u32 height, u8* pixels)",
			"ORCA_INLINE OC_Image_t OC_ImageNil()",
			"ORCA_INLINE OC_IoCmp_t OC_IoWaitSingleReq(OC_IoReq_t* req)",
			"ORCA_INLINE OC_IoError_t OC_FileLastError(OC_File_t handle)",
			"ORCA_INLINE OC_JointType_t OC_GetJoint()",
			"ORCA_INLINE OC_ListElement_t* OC_ListBegin(OC_List_t list)",
			"ORCA_INLINE OC_ListElement_t* OC_ListEnd(OC_List_t* list)",
			"ORCA_INLINE OC_ListElement_t* OC_ListLast(OC_List_t list)",
			"ORCA_INLINE OC_ListElement_t* OC_ListPopBack(OC_List_t* list)",
			"ORCA_INLINE OC_ListElement_t* OC_ListPopFront(OC_List_t* list)",
			"ORCA_INLINE OC_Mat2x3_t OC_MatrixTop_()",
			"ORCA_INLINE OC_RectAtlas_t* OC_RectAtlasCreate(OC_Arena_t* arena, i32 width, i32 height)",
			"ORCA_INLINE OC_Rect_t OC_ClipTop_()",
			"ORCA_INLINE OC_Rect_t OC_GetImageSourceRegion_()",
			"ORCA_INLINE OC_Rect_t OC_GlyphOutlines_(oc_str32 glyphIndices)",
			"ORCA_INLINE OC_Rect_t OC_RectAtlasAlloc_(OC_RectAtlas_t* atlas, i32 width, i32 height)",
			"ORCA_INLINE OC_Str32_t OC_FontGetGlyphIndices(OC_Font_t font, OC_Str32_t codePoints, OC_Str32_t backing)",
			"ORCA_INLINE OC_Str32_t OC_FontPushGlyphIndices(OC_Arena_t* arena, OC_Font_t font, OC_Str32_t codePoints)",
			"ORCA_INLINE OC_Str8List_t OC_PathSplit(OC_Arena_t* arena, MyStr_t path)",
			"ORCA_INLINE OC_Str8List_t OC_Str8Split(OC_Arena_t* arena, MyStr_t str, OC_Str8List_t separators)",
			"ORCA_INLINE OC_Str8_t OC_PathJoin_(OC_Arena_t* arena, OC_Str8List_t elements)",
			"ORCA_INLINE OC_Str8_t OC_Str8FromBuffer_(u64 len, char* buffer)",
			"ORCA_INLINE OC_Str8_t OC_Str8ListJoin_(OC_Arena_t* arena, OC_Str8List_t list)",
			"ORCA_INLINE OC_Str8_t OC_Str8PushBuffer_(OC_Arena_t* arena, u64 len, char* buffer)",
			"ORCA_INLINE OC_Str8_t OC_Str8PushCstring_(OC_Arena_t* arena, const char* str)",
			"ORCA_INLINE OC_Str8_t OC_Str8Pushfv_(OC_Arena_t* arena, const char* format, va_list args)",
			"ORCA_INLINE OC_Surface_t OC_CanvasSurfaceCreate(OC_CanvasRenderer_t renderer)",
			"ORCA_INLINE OC_Surface_t OC_GlesSurfaceCreate()",
			"ORCA_INLINE OC_Surface_t OC_SurfaceNil()",
			"ORCA_INLINE OC_TextMetrics_t OC_FontTextMetrics(OC_Font_t font, r32 fontSize, MyStr_t text)",
			"ORCA_INLINE OC_TextMetrics_t OC_FontTextMetricsUtr32(OC_Font_t font, f32 fontSize, OC_Str32_t codepoints)",
			"ORCA_INLINE OC_UiBox_t* OC_UiScrollbar(const char* name, f32 thumbRatio, f32* scrollValue)",
			"ORCA_INLINE OC_UiBox_t* OC_UiSlider(const char* name, f32* value)",
			"ORCA_INLINE OC_UiContext_t* OC_UiGetContext()",
			"ORCA_INLINE OC_UiPattern_t OC_UiPatternAll()",
			"ORCA_INLINE OC_UiPattern_t OC_UiPatternOwner()",
			"ORCA_INLINE OC_UiRadioGroupInfo_t OC_UiRadioGroup(const char* name, OC_UiRadioGroupInfo_t* info)",
			"ORCA_INLINE OC_UiSelectPopupInfo_t OC_UiSelectPopup(const char* name, OC_UiSelectPopupInfo_t* info)",
			"ORCA_INLINE OC_UiSig_t OC_UiButton(const char* label)",
			"ORCA_INLINE OC_UiSig_t OC_UiCheckbox(const char* name, bool* checked)",
			"ORCA_INLINE OC_UiSig_t OC_UiLabel(const char* label)",
			"ORCA_INLINE OC_UiSig_t OC_UiLabelStr8(MyStr_t label)",
			"ORCA_INLINE OC_UiSig_t OC_UiMenuButton(const char* label)",
			"ORCA_INLINE OC_UiTextBoxResult_t OC_UiTextBox(const char* name, OC_Arena_t* arena, MyStr_t text)",
			"ORCA_INLINE OC_Vec2_t OC_GetPosition_()",
			"ORCA_INLINE OC_Vec2_t OC_ImageSize_(OC_Image_t image)",
			"ORCA_INLINE OC_Vec2_t OC_SurfaceContentsScaling_(OC_Surface_t surface)",
			"ORCA_INLINE OC_Vec2_t OC_SurfaceGetSize_(OC_Surface_t surface)",
			"ORCA_INLINE bool OC_CanvasContextIsNil(OC_CanvasContext_t context)",
			"ORCA_INLINE bool OC_CanvasRendererIsNil(OC_CanvasRenderer_t renderer)",
			"ORCA_INLINE bool OC_FileIsNil(OC_File_t handle)",
			"ORCA_INLINE bool OC_FontIsNil(OC_Font_t font)",
			"ORCA_INLINE bool OC_GetTextFlip()",
			"ORCA_INLINE bool OC_ImageIsNil(OC_Image_t a)",
			"ORCA_INLINE bool OC_ListEmpty(OC_List_t list)",
			"ORCA_INLINE bool OC_PathIsAbsolute(MyStr_t path)",
			"ORCA_INLINE bool OC_SurfaceGetHidden(OC_Surface_t surface)",
			"ORCA_INLINE bool OC_SurfaceIsNil(OC_Surface_t surface)",
			"ORCA_INLINE char* OC_Str8ToCstring(OC_Arena_t* arena, MyStr_t string)",
			"ORCA_INLINE f32 OC_FontGetScaleForEmPixels(OC_Font_t font, f32 emSize)",
			"ORCA_INLINE f32 OC_GetFontSize()",
			"ORCA_INLINE f32 OC_GetMaxJointExcursion()",
			"ORCA_INLINE f32 OC_GetTolerance()",
			"ORCA_INLINE f32 OC_GetWidth()",
			"ORCA_INLINE i64 OC_FilePos(OC_File_t file)",
			"ORCA_INLINE i64 OC_FileSeek(OC_File_t file, i64 offset, OC_FileWhence_t whence)",
			"ORCA_INLINE int OC_Str8Cmp(MyStr_t s1, MyStr_t s2)",
			"ORCA_INLINE rec OC_ClipTop()",
			"ORCA_INLINE rec OC_GetImageSourceRegion()",
			"ORCA_INLINE rec OC_GlyphOutlines(oc_str32 glyphIndices)",
			"ORCA_INLINE rec OC_RectAtlasAlloc(OC_RectAtlas_t* atlas, i32 width, i32 height)",
			"ORCA_INLINE u32 OC_FontGetGlyphIndex(OC_Font_t font, OC_Utf32_t codePoint)",
			"ORCA_INLINE u64 OC_FileRead(OC_File_t file, u64 size, char* buffer)",
			"ORCA_INLINE u64 OC_FileSize(OC_File_t file)",
			"ORCA_INLINE u64 OC_FileWrite(OC_File_t file, u64 size, char* buffer)",
			"ORCA_INLINE v2 OC_GetPosition()",
			"ORCA_INLINE v2 OC_ImageSize(OC_Image_t image)",
			"ORCA_INLINE v2 OC_SurfaceContentsScaling(OC_Surface_t surface)",
			"ORCA_INLINE v2 OC_SurfaceGetSize(OC_Surface_t surface)",
			"ORCA_INLINE void OC_Arc(f32 x, f32 y, f32 r, f32 arcAngle, f32 startAngle)",
			"ORCA_INLINE void OC_ArenaCleanup(OC_Arena_t* arena)",
			"ORCA_INLINE void OC_ArenaClear(OC_Arena_t* arena)",
			"ORCA_INLINE void OC_ArenaInit(OC_Arena_t* arena)",
			"ORCA_INLINE void OC_ArenaInitWithOptions(OC_Arena_t* arena, OC_ArenaOptions_t* options)",
			"ORCA_INLINE void OC_ArenaScopeEnd(OC_ArenaScope_t scope)",
			"ORCA_INLINE void OC_CanvasContextDestroy(OC_CanvasContext_t context)",
			"ORCA_INLINE void OC_CanvasContextSetMsaaSampleCount(OC_CanvasContext_t context, u32 sampleCount)",
			"ORCA_INLINE void OC_CanvasPresent(OC_CanvasRenderer_t renderer, OC_Surface_t surface)",
			"ORCA_INLINE void OC_CanvasRender(OC_CanvasRenderer_t renderer, OC_CanvasContext_t context, OC_Surface_t surface)",
			"ORCA_INLINE void OC_CanvasRendererDestroy(OC_CanvasRenderer_t renderer)",
			"ORCA_INLINE void OC_CanvasSurfaceSwapInterval(OC_Surface_t surface, int swap)",
			"ORCA_INLINE void OC_CircleFill(f32 x, f32 y, f32 r)",
			"ORCA_INLINE void OC_CircleStroke(f32 x, f32 y, f32 r)",
			"ORCA_INLINE void OC_Clear()",
			"ORCA_INLINE void OC_ClipPop()",
			"ORCA_INLINE void OC_ClipPush(f32 x, f32 y, f32 w, f32 h)",
			"ORCA_INLINE void OC_ClipPush(rec rectangle)",
			"ORCA_INLINE void OC_ClosePath()",
			"ORCA_INLINE void OC_CodepointsOutlines(oc_str32 string)",
			"ORCA_INLINE void OC_CubicTo(f32 x1, f32 y1, f32 x2, f32 y2, f32 x3, f32 y3)",
			"ORCA_INLINE void OC_CubicTo(v2 p1, v2 p2, v2 p3)",
			"ORCA_INLINE void OC_EllipseFill(f32 x, f32 y, f32 rx, f32 ry)",
			"ORCA_INLINE void OC_EllipseStroke(f32 x, f32 y, f32 rx, f32 ry)",
			"ORCA_INLINE void OC_FileClose(OC_File_t file)",
			"ORCA_INLINE void OC_Fill()",
			"ORCA_INLINE void OC_FontDestroy(OC_Font_t font)",
			"ORCA_INLINE void OC_GlesSurfaceMakeCurrent(OC_Surface_t surface)",
			"ORCA_INLINE void OC_GlesSurfaceSwapBuffers(OC_Surface_t surface)",
			"ORCA_INLINE void OC_GlesSurfaceSwapInterval(OC_Surface_t surface, int interval)",
			"ORCA_INLINE void OC_ImageAtlasRecycle(OC_RectAtlas_t* atlas, OC_ImageRegion_t imageRgn)",
			"ORCA_INLINE void OC_ImageDestroy(OC_Image_t image)",
			"ORCA_INLINE void OC_ImageDraw(OC_Image_t image, rec rect)",
			"ORCA_INLINE void OC_ImageDrawRegion(OC_Image_t image, rec srcRegion, rec dstRegion)",
			"ORCA_INLINE void OC_ImageUploadRegionRgba8(OC_Image_t image, rec region, u8* pixels)",
			"ORCA_INLINE void OC_LineTo(f32 x, f32 y)",
			"ORCA_INLINE void OC_LineTo(v2 pos)",
			"ORCA_INLINE void OC_ListInit(OC_List_t* list)",
			"ORCA_INLINE void OC_ListInsert(OC_List_t* list, OC_ListElement_t* afterElt, OC_ListElement_t* elt)",
			"ORCA_INLINE void OC_ListInsertBefore(OC_List_t* list, OC_ListElement_t* beforeElt, OC_ListElement_t* elt)",
			"ORCA_INLINE void OC_ListPushBack(OC_List_t* list, OC_ListElement_t* elt)",
			"ORCA_INLINE void OC_ListPushFront(OC_List_t* list, OC_ListElement_t* elt)",
			"ORCA_INLINE void OC_ListRemove(OC_List_t* list, OC_ListElement_t* elt)",
			"ORCA_INLINE void OC_MatrixMultiplyPush_(OC_Mat2x3_t matrix)",
			"ORCA_INLINE void OC_MatrixPop()",
			"ORCA_INLINE void OC_MatrixPush_(OC_Mat2x3_t matrix)",
			"ORCA_INLINE void OC_MoveTo(f32 x, f32 y)",
			"ORCA_INLINE void OC_MoveTo(v2 pos)",
			"ORCA_INLINE void OC_QuadraticTo(f32 x1, f32 y1, f32 x2, f32 y2)",
			"ORCA_INLINE void OC_QuadraticTo(v2 p1, v2 p2)",
			"ORCA_INLINE void OC_RectAtlasRecycle(OC_RectAtlas_t* atlas, rec rect)",
			"ORCA_INLINE void OC_RectangleFill(rec rectangle)",
			"ORCA_INLINE void OC_RectangleStroke(f32 x, f32 y, f32 w, f32 h)",
			"ORCA_INLINE void OC_RectangleStroke(rec rectangle)",
			"ORCA_INLINE void OC_RequestQuit()",
			"ORCA_INLINE void OC_RoundedRectangleFill(f32 x, f32 y, f32 w, f32 h, f32 r)",
			"ORCA_INLINE void OC_RoundedRectangleFill(rec rectangle, r32 r)",
			"ORCA_INLINE void OC_RoundedRectangleStroke(f32 x, f32 y, f32 w, f32 h, f32 r)",
			"ORCA_INLINE void OC_RoundedRectangleStroke(rec rectangle, r32 r)",
			"ORCA_INLINE void OC_ScratchEnd(OC_ArenaScope_t scope)",
			"ORCA_INLINE void OC_SetCap(OC_CapType_t cap)",
			"ORCA_INLINE void OC_SetColor(Color_t color)",
			"ORCA_INLINE void OC_SetColorRgba(OC_Color_t color)",
			"ORCA_INLINE void OC_SetColorRgba(f32 r, f32 g, f32 b, f32 a)",
			"ORCA_INLINE void OC_SetColorSrgba(OC_Color_t color)",
			"ORCA_INLINE void OC_SetColorSrgba(f32 r, f32 g, f32 b, f32 a)",
			"ORCA_INLINE void OC_SetFont(OC_Font_t font)",
			"ORCA_INLINE void OC_SetFontSize(f32 size)",
			"ORCA_INLINE void OC_SetGradient(OC_GradientBlendSpace_t blendSpace, Color_t bottomLeft, Color_t bottomRight, Color_t topRight, Color_t topLeft)",
			"ORCA_INLINE void OC_SetImage(OC_Image_t image)",
			"ORCA_INLINE void OC_SetImageSourceRegion(rec region)",
			"ORCA_INLINE void OC_SetJoint(OC_JointType_t joint)",
			"ORCA_INLINE void OC_SetMaxJointExcursion(f32 maxJointExcursion)",
			"ORCA_INLINE void OC_SetTextFlip(bool flip)",
			"ORCA_INLINE void OC_SetTolerance(f32 tolerance)",
			"ORCA_INLINE void OC_SetWidth(f32 width)",
			"ORCA_INLINE void OC_Str8ListPush(OC_Arena_t* arena, OC_Str8List_t* list, MyStr_t str)",
			"ORCA_INLINE void OC_Stroke()",
			"ORCA_INLINE void OC_SurfaceBringToFront(OC_Surface_t surface)",
			"ORCA_INLINE void OC_SurfaceDestroy(OC_Surface_t surface)",
			"ORCA_INLINE void OC_SurfaceSendToBack(OC_Surface_t surface)",
			"ORCA_INLINE void OC_SurfaceSetHidden(OC_Surface_t surface, bool hidden)",
			"ORCA_INLINE void OC_TextFill(r32 x, r32 y, MyStr_t text)",
			"ORCA_INLINE void OC_TextFill(v2 pos, MyStr_t text)",
			"ORCA_INLINE void OC_TextOutlines(MyStr_t string)",
			"ORCA_INLINE void OC_UiBeginFrame(v2 size, OC_UiStyle_t* defaultStyle, OC_UiStyleMask_t mask)",
			"ORCA_INLINE void OC_UiDraw()",
			"ORCA_INLINE void OC_UiEndFrame()",
			"ORCA_INLINE void OC_UiInit(OC_UiContext_t* context)",
			"ORCA_INLINE void OC_UiMenuBarBegin(const char* name)",
			"ORCA_INLINE void OC_UiMenuBarEnd()",
			"ORCA_INLINE void OC_UiMenuBegin(const char* label)",
			"ORCA_INLINE void OC_UiMenuEnd()",
			"ORCA_INLINE void OC_UiPanelBegin(const char* name, OC_UiFlags_t flags)",
			"ORCA_INLINE void OC_UiPanelEnd()",
			"ORCA_INLINE void OC_UiPatternPush(OC_Arena_t* arena, OC_UiPattern_t* pattern, OC_UiSelector_t selector)",
			"ORCA_INLINE void OC_UiProcessEvent(OC_Event_t* event)",
			"ORCA_INLINE void OC_UiSetContext(OC_UiContext_t* context)",
			"ORCA_INLINE void OC_UiSetNextHeight(r32 height, OC_UiSizeKind_t sizeKind = OC_UI_SIZE_PIXELS)",
			"ORCA_INLINE void OC_UiSetNextWidth(r32 width, OC_UiSizeKind_t kind = OC_UI_SIZE_PIXELS)",
			"ORCA_INLINE void OC_UiSetTheme(OC_UiTheme_t* theme)",
			"ORCA_INLINE void OC_UiStyleMatchAfter(OC_UiPattern_t pattern, OC_UiStyle_t* style, OC_UiStyleMask_t mask)",
			"ORCA_INLINE void OC_UiStyleMatchBefore(OC_UiPattern_t pattern, OC_UiStyle_t* style, OC_UiStyleMask_t mask)",
			"ORCA_INLINE void OC_UiStyleNext(OC_UiStyle_t* style, OC_UiStyleMask_t mask)",
			"ORCA_INLINE void OC_UiTooltip(const char* label)",
			"ORCA_INLINE void OC_WindowSetSize(v2 size)",
			"ORCA_INLINE void OC_WindowSetTitle(MyStr_t title)",
			"ORCA_INLINE void* OC_ArenaPush(OC_Arena_t* arena, u64 size)",
			"ORCA_INLINE void* OC_ArenaPushAligned(OC_Arena_t* arena, u64 size, u32 alignment)",
			"Vector2_t NewVec2(r32 x, r32 y)",
			"Vector2i_t NewVec2i(i32 x, i32 y)",
			"Vector3_t NewVec3(r32 x, r32 y, r32 z)",
			"Vector3i_t NewVec3i(i32 x, i32 y, i32 z)",
			"Vector4_t NewVec4(r32 x, r32 y, r32 z, r32 w)",
			"Vector4i_t NewVec4i(i32 x, i32 y, i32 z, i32 w)",
			"WordBreakCharClass_t GetWordBreakCharClass(u32 codepoint)",
			"bool BoxBasicallyEqual(box left, box right, r32 tolerance = 0.001f)",
			"bool BoxesIntersect(box boundingBox1, box boundingBox2, bool inclusive = true)",
			"bool BoxiEqual(boxi left, boxi right)",
			"bool BoxisIntersect(boxi boundingBox1, boxi boundingBox2, bool inclusive = true)",
			"bool BufferIsNullTerminated(uxx bufferSize, const char* bufferPntr)",
			"bool DoesStrContainMultibyteUtf8Characters(MyStr_t str)",
			"bool FindNextCharInStr(MyStr_t target, uxx startIndex, MyStr_t searchCharsStr, uxx* indexOut = nullptr, bool ignoreCharsInQuotes = false)",
			"bool FindNextUnknownCharInStr(MyStr_t target, uxx startIndex, MyStr_t knownCharsStr, uxx* indexOut = nullptr, bool ignoreCharsInQuotes = false)",
			"bool FindNextWhitespaceInStr(MyStr_t target, uxx startIndex, uxx* indexOut = nullptr, bool ignoreCharsInQuotes = false)",
			"bool FindSubstring(MyStr_t target, MyStr_t substring, uxx* indexOut = nullptr, bool ignoreCase = false, uxx startIndex = 0)",
			"bool IsCharPairWordBreak(u32 prevCodepoint, u32 nextCodepoint, bool forward, bool subwords)",
			"bool IsEmptyStr(MyStr_t target)",
			"bool IsInsideBox(box boundingBox, v3 point)",
			"bool IsInsideBoxi(boxi boundingBox, v3i point, bool includePositiveEdges = false)",
			"bool IsInsideObb2D(obb2 rectangle, v2 point)",
			"bool IsInsideRec(rec rectangle, v2 point)",
			"bool IsInsideReci(reci rectangle, v2i point, bool includePositiveEdges = false)",
			"bool IsNullStr(MyStr_t target)",
			"bool IsStrNullTerminated(MyStr_t target)",
			"bool IsStringMadeOfChars(MyStr_t str, MyStr_t allowedChars, uxx* firstInvalidCharOut = nullptr)",
			"bool IsStringValidIdentifier(MyStr_t str, bool allowUnderscores = true, bool allowNumbers = true, bool allowLeadingNumbers = false, bool allowEmpty = false, bool allowSpaces = false)",
			"bool Obb2DBasicallyEqual(obb2 left, obb2 right, r32 tolerance = 0.001f)",
			"bool RecBasicallyEqual(rec left, rec right, r32 tolerance = 0.001f)",
			"bool ReciEqual(reci left, reci right)",
			"bool RecisIntersect(reci rectangle1, reci rectangle2, bool inclusive = true)",
			"bool RecsIntersect(rec rectangle1, rec rectangle2, bool inclusive = true)",
			"bool SplitStringFixed(MyStr_t target, MyStr_t delineator, uxx numPieces, MyStr_t* piecesBuffer, bool ignoreCase = false)",
			"bool StrEndsWith(MyStr_t str, MyStr_t suffix, bool ignoreCase = false)",
			"bool StrEndsWithSlash(MyStr_t str)",
			"bool StrEquals(MyStr_t target, MyStr_t comparison)",
			"bool StrEqualsIgnoreCase(MyStr_t target, MyStr_t comparison)",
			"bool StrStartsWith(MyStr_t str, MyStr_t prefix, bool ignoreCase = false)",
			"bool StrStartsWithSlash(MyStr_t str)",
			"bool VarArrayExpand(VarArray_t* array, u64 capacityRequired)",
			"bool Vec2BasicallyEqual(v2 left, v2 right, r32 tolerance = 0.001f)",
			"bool Vec2iEqual(v2i left, v2i right)",
			"bool Vec3BasicallyEqual(v3 left, v3 right, r32 tolerance = 0.001f)",
			"bool Vec3iEqual(v3i left, v3i right)",
			"bool Vec4BasicallyEqual(v4 left, v4 right, r32 tolerance = 0.001f)",
			"bool Vec4iEqual(v4i left, v4i right)",
			"box BoxCubify(box boundingBox, bool makeLarger = true, bool center = true)",
			"box BoxDeflate(box boundingBox, r32 subWidth, r32 subHeight, r32 subDepth)",
			"box BoxDeflateX(box boundingBox, r32 subWidth)",
			"box BoxDeflateY(box boundingBox, r32 subHeight)",
			"box BoxDeflateZ(box boundingBox, r32 subDepth)",
			"box BoxExpand(box boundingBox, r32 extraWidth, r32 extraHeight, r32 extraDepth)",
			"box BoxExpandX(box boundingBox, r32 extraWidth)",
			"box BoxExpandY(box boundingBox, r32 extraHeight)",
			"box BoxExpandZ(box boundingBox, r32 extraDepth)",
			"box BoxInflate(box boundingBox, r32 extraWidth, r32 extraHeight, r32 extraDepth)",
			"box BoxInflateX(box boundingBox, r32 extraWidth)",
			"box BoxInflateY(box boundingBox, r32 extraHeight)",
			"box BoxInflateZ(box boundingBox, r32 extraDepth)",
			"box BoxInvert(box boundingBox)",
			"box BoxInvertX(box boundingBox)",
			"box BoxInvertY(box boundingBox)",
			"box BoxInvertZ(box boundingBox)",
			"box BoxRetract(box boundingBox, r32 subWidth, r32 subHeight, r32 subDepth)",
			"box BoxRetractX(box boundingBox, r32 subWidth)",
			"box BoxRetractY(box boundingBox, r32 subHeight)",
			"box BoxRetractZ(box boundingBox, r32 subDepth)",
			"box BoxScale(box boundingBox, r32 scalar)",
			"box BoxScale3(box boundingBox, r32 scaleX, r32 scaleY, r32 scaleZ)",
			"box BoxShift(box boundingBox, r32 amountX, r32 amountY, r32 amountZ)",
			"box BoxUninvert(box boundingBox)",
			"box NewBox(v3 bottomLeft, v3 size)",
			"box NewBoxCentered(v3 center, v3 size)",
			"box ToBox(boxi boundingBox)",
			"boxi BoxiBoth(boxi boundingBox1, boxi boundingBox2)",
			"boxi BoxiCubify(boxi boundingBox, bool makeLarger = true)",
			"boxi BoxiDeflate(boxi boundingBox, i32 subWidth, i32 subHeight, i32 subDepth)",
			"boxi BoxiDeflateX(boxi boundingBox, i32 subWidth)",
			"boxi BoxiDeflateY(boxi boundingBox, i32 subHeight)",
			"boxi BoxiDeflateZ(boxi boundingBox, i32 subDepth)",
			"boxi BoxiExpand(boxi boundingBox, i32 extraWidth, i32 extraHeight, i32 extraDepth)",
			"boxi BoxiExpandToVec3i(boxi boundingBox, v3i newPoint)",
			"boxi BoxiExpandX(boxi boundingBox, i32 extraWidth)",
			"boxi BoxiExpandY(boxi boundingBox, i32 extraHeight)",
			"boxi BoxiExpandZ(boxi boundingBox, i32 extraDepth)",
			"boxi BoxiInflate(boxi boundingBox, i32 extraWidth, i32 extraHeight, i32 extraDepth)",
			"boxi BoxiInflateX(boxi boundingBox, i32 extraWidth)",
			"boxi BoxiInflateY(boxi boundingBox, i32 extraHeight)",
			"boxi BoxiInflateZ(boxi boundingBox, i32 extraDepth)",
			"boxi BoxiInvert(boxi boundingBox)",
			"boxi BoxiInvertX(boxi boundingBox)",
			"boxi BoxiInvertY(boxi boundingBox)",
			"boxi BoxiInvertZ(boxi boundingBox)",
			"boxi BoxiRetract(boxi boundingBox, i32 subWidth, i32 subHeight, i32 subDepth)",
			"boxi BoxiRetractX(boxi boundingBox, i32 subWidth)",
			"boxi BoxiRetractY(boxi boundingBox, i32 subHeight)",
			"boxi BoxiRetractZ(boxi boundingBox, i32 subDepth)",
			"boxi BoxiScale(boxi boundingBox, i32 scalar)",
			"boxi BoxiScale3(boxi boundingBox, i32 scaleX, i32 scaleY, i32 scaleZ)",
			"boxi BoxiShift(boxi boundingBox, i32 amountX, i32 amountY, i32 amountZ)",
			"boxi BoxiUninvert(boxi boundingBox)",
			"boxi NewBoxi(v3i bottomLeft, v3i size)",
			"boxi NewBoxiBetween(v3i point1, v3i point2)",
			"const char* FormatBytesNt(uxx numBytes, MemArena_t* memArena)",
			"const char* FormatMillisecondsNt(uxx milliseconds, MemArena_t* memArena)",
			"const char* FormatNumberWithCommasNt(uxx number, MemArena_t* memArena = nullptr)",
			"const char* FormatRealTimeNt(const RealTime_t* realTime, MemArena_t* memArena, bool includeDayOfWeek = true, bool includeHourMinuteSecond = true, bool includeMonthDayYear = true)",
			"const char* GetOpenFileDialogResultStr(OpenFileDialogResult_t enumValue)",
			"const char* GetWordBreakCharClassStr(WordBreakCharClass_t enumValue)",
			"i32 StrCompareIgnoreCase(MyStr_t str1, MyStr_t str2)",
			"i32 Vec2iDeterminant(v2i left, v2i right)",
			"i32 Vec2iDot(v2i left, v2i right)",
			"i32 Vec3iDeterminant(v3i left, v3i right)",
			"i32 Vec3iDot(v3i left, v3i right)",
			"i32 Vec4iDeterminant(v4i left, v4i right)",
			"i32 Vec4iDot(v4i left, v4i right)",
			"obb2 NewObb2D(v2 center, v2 size, r32 rotation)",
			"obb2 Obb2DDeflate(obb2 rectangle, r32 subWidth, r32 subHeight)",
			"obb2 Obb2DDeflateX(obb2 rectangle, r32 subWidth)",
			"obb2 Obb2DDeflateY(obb2 rectangle, r32 subHeight)",
			"obb2 Obb2DInflate(obb2 rectangle, r32 extraWidth, r32 extraHeight)",
			"obb2 Obb2DInflateX(obb2 rectangle, r32 extraWidth)",
			"obb2 Obb2DInflateY(obb2 rectangle, r32 extraHeight)",
			"obb2 Obb2DInvert(obb2 rectangle)",
			"obb2 Obb2DInvertX(obb2 rectangle)",
			"obb2 Obb2DInvertY(obb2 rectangle)",
			"obb2 Obb2DScale(obb2 boundingBox, r32 scalar)",
			"obb2 Obb2DShift(obb2 boundingBox, r32 amountX, r32 amountY)",
			"obb2 Obb2DSquarify(obb2 rectangle, bool makeLarger = true)",
			"obb2 Obb2DUninvert(obb2 rectangle)",
			"obb2 Obb2Line(v2 start, v2 end, r32 thickness)",
			"obb2 ToObb2D(rec rectangle)",
			"obb3 ToObb3D(box boundingBox)",
			"r32 Vec2AngleBetween(v2 vecLeft, v2 vecRight)",
			"r32 Vec2Determinant(v2 left, v2 right)",
			"r32 Vec2Dot(v2 left, v2 right)",
			"r32 Vec2Inner(v2 left, v2 right)",
			"r32 Vec2Length(v2 vector)",
			"r32 Vec2LengthSquared(v2 vector)",
			"r32 Vec2iLength(v2i vector)",
			"r32 Vec3AngleBetween(v3 vecLeft, v3 vecRight)",
			"r32 Vec3Determinant(v3 left, v3 right)",
			"r32 Vec3Dot(v3 left, v3 right)",
			"r32 Vec3Inner(v3 left, v3 right)",
			"r32 Vec3Length(v3 vector)",
			"r32 Vec3LengthSquared(v3 vector)",
			"r32 Vec3iLength(v3i vector)",
			"r32 Vec4Determinant(v4 left, v4 right)",
			"r32 Vec4Dot(v4 left, v4 right)",
			"r32 Vec4Inner(v4 left, v4 right)",
			"r32 Vec4Length(v4 vector)",
			"r32 Vec4iLength(v4i vector)",
			"rec GetObb2DAlignedBounds(obb2 boundingBox)",
			"rec NewRec(v2 topLeft, v2 size)",
			"rec NewRecBetween(r32 point1X, r32 point1Y, r32 point2X, r32 point2Y)",
			"rec NewRecCentered(v2 center, v2 size)",
			"rec RecBoth(rec rectangle1, rec rectangle2)",
			"rec RecDeflate(rec rectangle, r32 subWidth, r32 subHeight)",
			"rec RecDeflateX(rec rectangle, r32 subWidth)",
			"rec RecDeflateY(rec rectangle, r32 subHeight)",
			"rec RecExpand(rec rectangle, r32 extraWidth, r32 extraHeight)",
			"rec RecExpandDown(rec rectangle, r32 extraDown)",
			"rec RecExpandLeft(rec rectangle, r32 extraLeft)",
			"rec RecExpandRight(rec rectangle, r32 extraRight)",
			"rec RecExpandToVec2(rec rectangle, v2 newPoint)",
			"rec RecExpandUp(rec rectangle, r32 extraUp)",
			"rec RecExpandX(rec rectangle, r32 extraWidth)",
			"rec RecExpandY(rec rectangle, r32 extraHeight)",
			"rec RecInflate(rec rectangle, r32 extraWidth, r32 extraHeight)",
			"rec RecInflateX(rec rectangle, r32 extraWidth)",
			"rec RecInflateY(rec rectangle, r32 extraHeight)",
			"rec RecInvert(rec rectangle)",
			"rec RecInvertX(rec rectangle)",
			"rec RecInvertY(rec rectangle)",
			"rec RecLerp(rec rectangle1, rec rectangle2, r32 amount)",
			"rec RecOverlap(rec rectangle1, rec rectangle2)",
			"rec RecRetract(rec rectangle, r32 subWidth, r32 subHeight)",
			"rec RecRetractX(rec rectangle, r32 subWidth)",
			"rec RecRetractY(rec rectangle, r32 subHeight)",
			"rec RecScale(rec rectangle, r32 scalar)",
			"rec RecScale2(rec rectangle, r32 scaleX, r32 scaleY)",
			"rec RecShift(rec rectangle, r32 amountX, r32 amountY)",
			"rec RecSquarify(rec rectangle, bool makeLarger = true, bool center = true)",
			"rec RecUninvert(rec rectangle)",
			"rec ToRec(reci rectangle)",
			"reci NewReci(v2i topLeft, v2i size)",
			"reci ReciBoth(reci rectangle1, reci rectangle2)",
			"reci ReciDeflate(reci rectangle, i32 subWidth, i32 subHeight)",
			"reci ReciDeflateX(reci rectangle, i32 subWidth)",
			"reci ReciDeflateY(reci rectangle, i32 subHeight)",
			"reci ReciExpand(reci rectangle, i32 extraWidth, i32 extraHeight)",
			"reci ReciExpandDown(reci rectangle, i32 extraDown)",
			"reci ReciExpandLeft(reci rectangle, i32 extraLeft)",
			"reci ReciExpandRight(reci rectangle, i32 extraRight)",
			"reci ReciExpandToVec2i(reci rectangle, v2i newPoint)",
			"reci ReciExpandUp(reci rectangle, i32 extraUp)",
			"reci ReciExpandX(reci rectangle, i32 extraWidth)",
			"reci ReciExpandY(reci rectangle, i32 extraHeight)",
			"reci ReciInflate(reci rectangle, i32 extraWidth, i32 extraHeight)",
			"reci ReciInflateX(reci rectangle, i32 extraWidth)",
			"reci ReciInflateY(reci rectangle, i32 extraHeight)",
			"reci ReciInvert(reci rectangle)",
			"reci ReciInvertX(reci rectangle)",
			"reci ReciInvertY(reci rectangle)",
			"reci ReciOverlap(reci rectangle1, reci rectangle2)",
			"reci ReciRetract(reci rectangle, i32 subWidth, i32 subHeight)",
			"reci ReciRetractX(reci rectangle, i32 subWidth)",
			"reci ReciRetractY(reci rectangle, i32 subHeight)",
			"reci ReciScale(reci rectangle, i32 scalar)",
			"reci ReciScale2(reci rectangle, i32 scaleX, i32 scaleY)",
			"reci ReciShift(reci rectangle, i32 amountX, i32 amountY)",
			"reci ReciSquarify(reci rectangle, bool makeLarger = true)",
			"reci ReciUninvert(reci rectangle)",
			"u8 GetCodepointForUtf8Str(MyStr_t str, uxx index, u32* codepointOut = nullptr)",
			"uxx FindNextWordBreakInString(MyStr_t str, uxx startIndex, bool forward, bool subwords, bool includeBreakAtStartIndex = false)",
			"uxx FnvHashStr(MyStr_t str)",
			"uxx StrReplaceInPlace(MyStr_t str, MyStr_t target, MyStr_t replacement, bool ignoreCase = false, bool allowShrinking = false)",
			"uxx TrimLeadingWhitespace(MyStr_t* target, bool trimNewLines = false)",
			"uxx TrimTrailingWhitespace(MyStr_t* target, bool trimNewLines = false)",
			"uxx TrimWhitespace(MyStr_t* target, bool trimNewLines = false)",
			"uxx UnescapeQuotedStringInPlace(MyStr_t* target, bool removeQuotes = true, bool allowNewLineEscapes = true, bool allowOtherEscapeCodes = false)",
			"v2 GetObb2DBottomLeft(obb2 boundingBox)",
			"v2 GetObb2DBottomRight(obb2 boundingBox)",
			"v2 GetObb2DDownVec(obb2 boundingBox)",
			"v2 GetObb2DLeftVec(obb2 boundingBox)",
			"v2 GetObb2DRelativePos(obb2 boundingBox, v2 point)",
			"v2 GetObb2DRightVec(obb2 boundingBox)",
			"v2 GetObb2DTopLeft(obb2 boundingBox)",
			"v2 GetObb2DTopRight(obb2 boundingBox)",
			"v2 GetObb2DUpVec(obb2 boundingBox)",
			"v2 GetObb2DWorldPoint(obb2 boundingBox, v2 relativeOffset)",
			"v2 ToVec2(v2i vector)",
			"v2 Vec2Abs(v2 vector)",
			"v2 Vec2Add(v2 left, v2 right)",
			"v2 Vec2Ceil(v2 vector)",
			"v2 Vec2Clamp(v2 vector, v2 min, v2 max)",
			"v2 Vec2Divide(v2 left, v2 right)",
			"v2 Vec2Fill(r32 value)",
			"v2 Vec2Floor(v2 vector)",
			"v2 Vec2FromAngle(r32 angle, r32 radius = 1.0f)",
			"v2 Vec2Lerp(v2 start, v2 end, r32 amount)",
			"v2 Vec2Max(v2 left, v2 right)",
			"v2 Vec2Min(v2 left, v2 right)",
			"v2 Vec2Multiply(v2 left, v2 right)",
			"v2 Vec2Normalize(v2 vector)",
			"v2 Vec2PerpLeft(v2 vector)",
			"v2 Vec2PerpRight(v2 vector)",
			"v2 Vec2Rotate(v2 vector, r32 angle)",
			"v2 Vec2Round(v2 vector)",
			"v2 Vec2Scale(v2 vector, r32 scalar)",
			"v2 Vec2Shrink(v2 vector, r32 divisor)",
			"v2 Vec2Subtract(v2 left, v2 right)",
			"v2 Vec2iNormalize(v2i vector)",
			"v2i Vec2Ceili(v2 vector)",
			"v2i Vec2Floori(v2 vector)",
			"v2i Vec2Roundi(v2 vector)",
			"v2i Vec2iAbs(v2i vector)",
			"v2i Vec2iAdd(v2i left, v2i right)",
			"v2i Vec2iClamp(v2i vector, v2i min, v2i max)",
			"v2i Vec2iFill(i32 value)",
			"v2i Vec2iMax(v2i left, v2i right)",
			"v2i Vec2iMin(v2i left, v2i right)",
			"v2i Vec2iMultiply(v2i left, v2i right)",
			"v2i Vec2iPerpLeft(v2i vector)",
			"v2i Vec2iPerpRight(v2i vector)",
			"v2i Vec2iScale(v2i vector, i32 scalar)",
			"v2i Vec2iSubtract(v2i left, v2i right)",
			"v3 ToVec3(v3i vector)",
			"v3 Vec3Abs(v3 vector)",
			"v3 Vec3Add(v3 left, v3 right)",
			"v3 Vec3Ceil(v3 vector)",
			"v3 Vec3Clamp(v3 vector, v3 min, v3 max)",
			"v3 Vec3Cross(v3 left, v3 right)",
			"v3 Vec3Divide(v3 left, v3 right)",
			"v3 Vec3Fill(r32 value)",
			"v3 Vec3Floor(v3 vector)",
			"v3 Vec3From2Angles(r32 facingDirection, r32 rotationUpDown, r32 radius = 1.0f)",
			"v3 Vec3FromVec2(v2 vector, r32 z)",
			"v3 Vec3Lerp(v3 start, v3 end, r32 amount)",
			"v3 Vec3Max(v3 left, v3 right)",
			"v3 Vec3Min(v3 left, v3 right)",
			"v3 Vec3Multiply(v3 left, v3 right)",
			"v3 Vec3Normalize(v3 vector)",
			"v3 Vec3Round(v3 vector)",
			"v3 Vec3Scale(v3 vector, r32 scalar)",
			"v3 Vec3Shrink(v3 vector, r32 divisor)",
			"v3 Vec3Subtract(v3 left, v3 right)",
			"v3 Vec3iNormalize(v3i vector)",
			"v3i Vec3Ceili(v3 vector)",
			"v3i Vec3Floori(v3 vector)",
			"v3i Vec3Roundi(v3 vector)",
			"v3i Vec3iAbs(v3i vector)",
			"v3i Vec3iAdd(v3i left, v3i right)",
			"v3i Vec3iClamp(v3i vector, v3i min, v3i max)",
			"v3i Vec3iCross(v3i left, v3i right)",
			"v3i Vec3iFill(i32 value)",
			"v3i Vec3iFromVec2i(v2i vector, i32 z)",
			"v3i Vec3iMax(v3i left, v3i right)",
			"v3i Vec3iMin(v3i left, v3i right)",
			"v3i Vec3iMultiply(v3i left, v3i right)",
			"v3i Vec3iScale(v3i vector, i32 scalar)",
			"v3i Vec3iSubtract(v3i left, v3i right)",
			"v4 ToVec4(v4i vector)",
			"v4 Vec4Abs(v4 vector)",
			"v4 Vec4Add(v4 left, v4 right)",
			"v4 Vec4Ceil(v4 vector)",
			"v4 Vec4Clamp(v4 vector, v4 min, v4 max)",
			"v4 Vec4Divide(v4 left, v4 right)",
			"v4 Vec4Fill(r32 value)",
			"v4 Vec4Floor(v4 vector)",
			"v4 Vec4FromVec3(v3 vector, r32 w)",
			"v4 Vec4Lerp(v4 start, v4 end, r32 amount)",
			"v4 Vec4Max(v4 left, v4 right)",
			"v4 Vec4Min(v4 left, v4 right)",
			"v4 Vec4Multiply(v4 left, v4 right)",
			"v4 Vec4Normalize(v4 vector)",
			"v4 Vec4Round(v4 vector)",
			"v4 Vec4Scale(v4 vector, r32 scalar)",
			"v4 Vec4Shrink(v4 vector, r32 divisor)",
			"v4 Vec4Subtract(v4 left, v4 right)",
			"v4 Vec4iNormalize(v4i vector)",
			"v4i Vec4Ceili(v4 vector)",
			"v4i Vec4Floori(v4 vector)",
			"v4i Vec4Roundi(v4 vector)",
			"v4i Vec4iAbs(v4i vector)",
			"v4i Vec4iAdd(v4i left, v4i right)",
			"v4i Vec4iClamp(v4i vector, v4i min, v4i max)",
			"v4i Vec4iFill(i32 value)",
			"v4i Vec4iFromVec3i(v3i vector, i32 w)",
			"v4i Vec4iMax(v4i left, v4i right)",
			"v4i Vec4iMin(v4i left, v4i right)",
			"v4i Vec4iMultiply(v4i left, v4i right)",
			"v4i Vec4iScale(v4i vector, i32 scalar)",
			"v4i Vec4iSubtract(v4i left, v4i right)",
			"void CloseOpenFileDialog(OpenFileDialog_t* dialog)",
			"void CreateVarArray(VarArray_t* array, MemArena_t* memArena, u64 itemSize, u64 initialRequiredCapacity = 0, bool exponentialChunkSize = true, u64 allocChunkSize = 8)",
			"void FreeVarArray(VarArray_t* array)",
			"void LaunchOpenFileDialog(OpenFileDialog_t* openFileDialog, MyStr_t startingFolder)",
			"void LayoutOpenFileDialog(OpenFileDialog_t* dialog)",
			"void RecAlign(rec* rectangleOut, r32 alignmentScale = 1.0f)",
			"void RecAlignSize(rec* rectangleOut, r32 alignmentScale = 1.0f)",
			"void RecAlignTopLeft(rec* rectangleOut, r32 alignmentScale = 1.0f)",
			"void RecLayoutBetweenX(rec* rectangleOut, r32 leftSide, r32 rightSide, r32 leftMargin = 0, r32 rightMargin = 0, r32 minWidth = 0)",
			"void RecLayoutBetweenY(rec* rectangleOut, r32 topSide, r32 bottomSide, r32 topMargin = 0, r32 bottomMargin = 0, r32 minHeight = 0)",
			"void RecLayoutBottomOf(rec* rectangleOut, r32 posOfThingUpwards, r32 topPadding = 0.0f)",
			"void RecLayoutBottomPortionOf(rec* rectangleOut, rec* otherRectangle, r32 portionHeight, bool shrinkOtherRec = false, r32 offsetAmount = 0)",
			"void RecLayoutHorizontalCenter(rec* rectangleOut, rec otherRectangle, r32 percentage = 0.5f)",
			"void RecLayoutLeftOf(rec* rectangleOut, r32 posOfThingToRight, r32 rightPadding = 0.0f)",
			"void RecLayoutLeftPortionOf(rec* rectangleOut, rec* otherRectangle, r32 portionWidth, bool shrinkOtherRec = false, r32 offsetAmount = 0)",
			"void RecLayoutRightOf(rec* rectangleOut, r32 posOfThingToLeft, r32 leftPadding = 0.0f)",
			"void RecLayoutRightPortionOf(rec* rectangleOut, rec* otherRectangle, r32 portionWidth, bool shrinkOtherRec = false, r32 offsetAmount = 0)",
			"void RecLayoutTopOf(rec* rectangleOut, r32 posOfThingDownwards, r32 bottomPadding = 0.0f)",
			"void RecLayoutTopPortionOf(rec* rectangleOut, rec* otherRectangle, r32 portionHeight, bool shrinkOtherRec = false, r32 offsetAmount = 0)",
			"void RecLayoutVerticalCenter(rec* rectangleOut, rec otherRectangle, r32 percentage = 0.5f)",
			"void RenderOpenFileDialog(OpenFileDialog_t* dialog)",
			"void StrReallocAppend(MyStr_t* baseStr, MyStr_t appendStr, MemArena_t* memArena)",
			"void StrSpliceInPlace(MyStr_t target, uxx startIndex, MyStr_t replacement)",
			"void UpdateOpenFileDialog(OpenFileDialog_t* dialog)",
			"void VarArrayAddVarArray(VarArray_t* destArray, const VarArray_t* sourceArray, u64 destIndex, u64 sourceIndex = 0, u64 sourceCount = UINT64_MAX)",
			"void VarArrayClear(VarArray_t* array, bool deallocate = false)",
			"void VarArrayCopy(VarArray_t* destArray, const VarArray_t* sourceArray, MemArena_t* memArena)",
			"void VarArrayName(VarArray_t* array, MyStr_t newName)",
			"void VarArrayReverse(VarArray_t* array, u64 startIndex = 0, u64 endIndex = 0)",
			"void VarArraySort(VarArray_t* array, CompareFunc_f* compareFunc, void* contextPntr)",
			"void Vec2Align(v2* vectorOut, r32 alignmentScale = 1.0f)",
			"void Vec3Align(v3* vectorOut, r32 alignmentScale = 1.0f)",
			"void Vec4Align(v4* vectorOut, r32 alignmentScale = 1.0f)",
			"void* VarArrayMove(VarArray_t* array, u64 fromIndex, u64 toIndex, bool swapWithTarget = true)",
		],
		"custom_globals":
		[
		],
		"custom_types":
		[
			"Box_t",
			"Boxi_t",
			"MyStrPair_t",
			"MyStr_t",
			"MyWideStr_t",
			"OC_ArenaOptions_t",
			"OC_ArenaScope_t",
			"OC_Arena_t",
			"OC_CanvasContext_t",
			"OC_CanvasRenderer_t",
			"OC_CapType_t",
			"OC_ClockKind_t",
			"OC_ColorSpace_t",
			"OC_Color_t",
			"OC_Event_t",
			"OC_FileAccess_t",
			"OC_FileDialogDesc_t",
			"OC_FileOpenFlags_t",
			"OC_FileOpenWithDialogResult_t",
			"OC_FileStatus_t",
			"OC_FileWhence_t",
			"OC_File_t",
			"OC_FontMetrics_t",
			"OC_Font_t",
			"OC_GradientBlendSpace_t",
			"OC_ImageRegion_t",
			"OC_Image_t",
			"OC_IoCmp_t",
			"OC_IoError_t",
			"OC_IoReq_t",
			"OC_JointType_t",
			"OC_KeyCode_t",
			"OC_ListElement_t",
			"OC_List_t",
			"OC_Mat2x3_t",
			"OC_MouseButton_t",
			"OC_RectAtlas_t",
			"OC_Rect_t",
			"OC_ScanCode_t",
			"OC_Str32_t",
			"OC_Str8Elt_t",
			"OC_Str8List_t",
			"OC_Str8_t",
			"OC_Surface_t",
			"OC_TextMetrics_t",
			"OC_UiBox_t",
			"OC_UiContext_t",
			"OC_UiFlags_t",
			"OC_UiPattern_t",
			"OC_UiRadioGroupInfo_t",
			"OC_UiSelectPopupInfo_t",
			"OC_UiSelector_t",
			"OC_UiSig_t",
			"OC_UiSizeKind_t",
			"OC_UiStyleMask_t",
			"OC_UiStyle_t",
			"OC_UiTextBoxResult_t",
			"OC_UiTheme_t",
			"OC_UnicodeRange_t",
			"OC_Utf32_t",
			"OC_Vec2_t",
			"OC_Vec2i_t",
			"OC_Vec3_t",
			"OC_Vec4_t",
			"Obb2D_t",
			"OpenFileDialogFile_t",
			"OpenFileDialogResult_t",
			"OpenFileDialog_t",
			"Rectangle_t",
			"Rectanglei_t",
			"VarArray_t",
			"Vector2_t",
			"Vector2i_t",
			"Vector3_t",
			"Vector3i_t",
			"Vector4_t",
			"Vector4i_t",
			"WordBreakCharClass_t",
			"box",
			"boxi",
			"obb2",
			"obb3",
			"rec",
			"reci",
			"v2",
			"v2i",
			"v3",
			"v3i",
			"v4",
			"v4i",
		],
	},
}
